<?xml version="1.0" encoding="UTF-8"?>

<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="ehcache.xsd"  name="petClinicDS">

  <defaultCache
      maxElementsInMemory="1000"
      eternal="false"
      timeToIdleSeconds="120"
      timeToLiveSeconds="120"
      overflowToDisk="true"
      diskSpoolBufferSizeMB="30"
      maxElementsOnDisk="1000"
      transactionalMode="${transactionalMode}"
      diskPersistent="false"
      diskExpiryThreadIntervalSeconds="120"
      memoryStoreEvictionPolicy="LRU"/>

  <!-- 
  	owners Cache stores Owners object. 	This has valuePadding.
   -->
  <cache name="owners"
         maxElementsInMemory="${owners_inMemory}"
         maxElementsOnDisk="${owners_capacity}"
         eternal="false"
         overflowToDisk="false"
         diskSpoolBufferSizeMB="20"
         timeToIdleSeconds="${owners_tti}"
         timeToLiveSeconds="${owners_ttl}"
         transactionalMode="${transactionalMode}"
         statistics="${statistics}"
         copyOnWrite="${copyOnWrite}"
         copyOnRead="${copyOnRead}"
         memoryStoreEvictionPolicy="LFU">

    ${copyStrategy}
    
    <terracotta clustered="${clustered}" 
    	 valueMode="${valueMode}" 
    	 consistency="${consistency}" 
    	 synchronousWrites="${synchronousWrites}"
    	 coherent="${coherent}"
    	 localKeyCache="${localKeyCache}" 
    	 localKeyCacheSize="${localKeyCacheSize}"
    	 concurrency="${concurrency}" 
    	 storageStrategy="${storageStrategy}">
    	 <nonstop enabled="${nonstopEnabled}" 
    	 	timeoutMillis="${nonstopTimeoutMillis}" 
    	 	immediateTimeout="${nonstopImmediateTimeout}">
    	 	<timeoutBehavior type="${nonstopTimeoutBehavior}" />
    	 </nonstop>
    </terracotta>
    	 
  </cache>
  
  <!-- 
  	pets Cache saves Pets objects. Each owner has 2 Pets. 
  	valuePadding DOESNT apply to this.
  	
  	1 Owner = 2 Pets
   -->
  <cache name="pets"
         maxElementsInMemory="${pets_inMemory}"
         maxElementsOnDisk="${pets_capacity}"
         eternal="false"
         overflowToDisk="false"
         diskSpoolBufferSizeMB="20"
         timeToIdleSeconds="${pets_tti}"
         timeToLiveSeconds="${pets_ttl}"
         transactionalMode="${transactionalMode}"
         statistics="${statistics}"
         copyOnWrite="${copyOnWrite}"
         copyOnRead="${copyOnRead}"
         memoryStoreEvictionPolicy="LFU">

    ${copyStrategy}
        
    <terracotta clustered="${clustered}" 
    	 valueMode="${valueMode}" 
    	 consistency="${consistency}" 
    	 synchronousWrites="${synchronousWrites}"
    	 coherent="${coherent}"
    	 localKeyCache="${localKeyCache}" 
    	 localKeyCacheSize="${localKeyCacheSize}"
    	 concurrency="${concurrency}" 
    	 storageStrategy="${storageStrategy}">
    	 <nonstop enabled="${nonstopEnabled}" 
    	 	timeoutMillis="${nonstopTimeoutMillis}" 
    	 	immediateTimeout="${nonstopImmediateTimeout}">
    	 	<timeoutBehavior type="${nonstopTimeoutBehavior}" />
    	 </nonstop>
    </terracotta>

  </cache>

	<!--
		visits cache stores visits for pets. Each Pet has 2 Visits, thus 4
		Visits per Owner. This has valuePadding.
		
		1 Owner = 4 Visits
	-->
  <cache name="visits"
         maxElementsInMemory="${visits_inMemory}"
         maxElementsOnDisk="${visits_capacity}"
         eternal="false"
         overflowToDisk="false"
         diskSpoolBufferSizeMB="20"
         timeToIdleSeconds="${visits_tti}"
         timeToLiveSeconds="${visits_ttl}"
         transactionalMode="${transactionalMode}"
         statistics="${statistics}"
         copyOnWrite="${copyOnWrite}"
         copyOnRead="${copyOnRead}"
         memoryStoreEvictionPolicy="LFU">

    ${copyStrategy}
         
    <terracotta clustered="${clustered}" 
    	 valueMode="${valueMode}" 
    	 consistency="${consistency}" 
    	 synchronousWrites="${synchronousWrites}"
    	 coherent="${coherent}"
    	 localKeyCache="${localKeyCache}" 
    	 localKeyCacheSize="${localKeyCacheSize}"
    	 concurrency="${concurrency}" 
    	 storageStrategy="${storageStrategy}">
    	 <nonstop enabled="${nonstopEnabled}" 
    	 	timeoutMillis="${nonstopTimeoutMillis}" 
    	 	immediateTimeout="${nonstopImmediateTimeout}">
    	 	<timeoutBehavior type="${nonstopTimeoutBehavior}" />
    	 </nonstop>
    </terracotta>

  </cache>

	<!--
		petVisits stores list of ids of visits. Each Pet will contain the list
		of ids. Each pet will result in 1 petVisits element, thus each owner
		is 2 petVisits. valuePadding DOESNT apply to this.
		
		1 owner = 2 petVisits
	-->
  
  <cache name="petVisits"
         maxElementsInMemory="${petVisits_inMemory}"
         maxElementsOnDisk="${petVisits_capacity}"
         eternal="false"
         overflowToDisk="false"
         diskSpoolBufferSizeMB="20"
         timeToIdleSeconds="${petVisits_tti}"
         timeToLiveSeconds="${petVisits_ttl}"
         transactionalMode="${transactionalMode}"
         copyOnWrite="${copyOnWrite}"
         copyOnRead="${copyOnRead}"
         statistics="${statistics}"
         memoryStoreEvictionPolicy="LFU">

    ${copyStrategy}
         
    <terracotta clustered="${clustered}" 
    	 valueMode="${valueMode}" 
    	 consistency="${consistency}" 
    	 synchronousWrites="${synchronousWrites}"
    	 coherent="${coherent}"
    	 localKeyCache="${localKeyCache}" 
    	 localKeyCacheSize="${localKeyCacheSize}"
    	 concurrency="${concurrency}" 
    	 storageStrategy="${storageStrategy}">
    	 <nonstop enabled="${nonstopEnabled}" 
    	 	timeoutMillis="${nonstopTimeoutMillis}" 
    	 	immediateTimeout="${nonstopImmediateTimeout}">
    	 	<timeoutBehavior type="${nonstopTimeoutBehavior}" />
    	 </nonstop>
    </terracotta>

  </cache>

	<!--
		ownerPets store ids for Pets. Each Owner will have list of ids of Pet
		Objects created. Each owner will result in 1 ownerPets element. 
		valuePadding DOESNT apply to this.
		
		1 Owner = 1 ownerPets
	-->
  
  <cache name="ownerPets"
         maxElementsInMemory="${ownerPets_inMemory}"
         maxElementsOnDisk="${ownerPets_capacity}"
         eternal="false"
         overflowToDisk="false"
         diskSpoolBufferSizeMB="20"
         timeToIdleSeconds="${ownerPets_tti}"
         timeToLiveSeconds="${ownerPets_ttl}"
         transactionalMode="${transactionalMode}"
         copyOnWrite="${copyOnWrite}"
         copyOnRead="${copyOnRead}"
         statistics="${statistics}"
         memoryStoreEvictionPolicy="LFU">

    ${copyStrategy}
         
    <terracotta clustered="${clustered}" 
    	 valueMode="${valueMode}" 
    	 consistency="${consistency}" 
    	 synchronousWrites="${synchronousWrites}"
    	 coherent="${coherent}"
    	 localKeyCache="${localKeyCache}" 
    	 localKeyCacheSize="${localKeyCacheSize}"
    	 concurrency="${concurrency}" 
    	 storageStrategy="${storageStrategy}">
    	 <nonstop enabled="${nonstopEnabled}" 
    	 	timeoutMillis="${nonstopTimeoutMillis}" 
    	 	immediateTimeout="${nonstopImmediateTimeout}">
    	 	<timeoutBehavior type="${nonstopTimeoutBehavior}" />
    	 </nonstop>
    </terracotta>

  </cache>

	<!--
		There are 6 petTypes. The total elements should be 6 only.
		valuePadding DOESNT apply to this.
	-->
  <cache name="petTypes"
         maxElementsInMemory="${petTypes_inMemory}"
         maxElementsOnDisk="${petTypes_capacity}"
         eternal="false"
         overflowToDisk="false"
         diskSpoolBufferSizeMB="20"
         timeToIdleSeconds="${petTypes_tti}"
         timeToLiveSeconds="${petTypes_ttl}"
         transactionalMode="${transactionalMode}"
         copyOnWrite="${copyOnWrite}"
         copyOnRead="${copyOnRead}"
         statistics="${statistics}"
         memoryStoreEvictionPolicy="LFU">

    ${copyStrategy}
         
    <terracotta clustered="${clustered}" 
    	 valueMode="${valueMode}" 
    	 consistency="${consistency}" 
    	 synchronousWrites="${synchronousWrites}"
    	 coherent="${coherent}"
    	 localKeyCache="${localKeyCache}" 
    	 localKeyCacheSize="${localKeyCacheSize}"
    	 concurrency="${concurrency}" 
    	 storageStrategy="${storageStrategy}">
    	 <nonstop enabled="${nonstopEnabled}" 
    	 	timeoutMillis="${nonstopTimeoutMillis}" 
    	 	immediateTimeout="${nonstopImmediateTimeout}">
    	 	<timeoutBehavior type="${nonstopTimeoutBehavior}" />
    	 </nonstop>
    </terracotta>

  </cache>
	${expressTerracottaUrl}
</ehcache>
